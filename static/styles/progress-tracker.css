.progress-tracker {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  margin: 40px auto;
  padding: 0;
  list-style: none;
}

.progress-step {
  display: block;
  position: relative;
  -webkit-box-flex: 1;
      -ms-flex: 1 1 0%;
          flex: 1 1 0%;
  margin: 0;
  padding: 0;
  min-width: 28px;
}

.progress-step:last-child {
  -webkit-box-flex: 0;
      -ms-flex-positive: 0;
          flex-grow: 0;
}

.progress-step:not(:last-child)::after {
  content: '';
  display: block;
  position: absolute;
  z-index: -10;
  top: 12px;
  bottom: 12px;
  right: -14px;
  width: 100%;
  height: 4px;
  transition: background-color 0.3s;
}

.progress-step.is-active .progress-title {
  font-weight: 400;
}

.progress-step > a {
  display: block;
}

.progress-marker {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  position: relative;
  z-index: 20;
  width: 28px;
  height: 28px;
  padding-bottom: 2px;
  color: #fff;
  font-weight: 400;
  border: 2px solid transparent;
  border-radius: 50%;
  transition: background-color, border-color;
  transition-duration: 0.3s;
}

.progress-text {
  display: block;
  padding: 14px 9.3333333333px;
  overflow: hidden;
  text-overflow: ellipsis;
}

.progress-title {
  margin-top: 0;
}

.progress-step .progress-marker {
  color: #fff;
  background-color: #b6b6b6;
}

.progress-step::after {
  background-color: #b6b6b6;
}

.progress-step .progress-text, .progress-step .progress-step > a .progress-text {
  color: #333333;
}

.progress-step.is-active .progress-marker {
  background-color: #2196F3;
}

.progress-step.is-complete .progress-marker {
  background-color: #1976D2;
}

.progress-step.is-complete::after {
  background-color: #868686;
}

.progress-step:hover .progress-marker {
  background-color: #56ADF5;
}

.progress-tracker--center .progress-step {
  text-align: center;
}

.progress-tracker--center .progress-step:last-child {
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
}

.progress-tracker--center .progress-step::after {
  right: -50%;
}

.progress-tracker--center .progress-marker {
  margin-left: auto;
  margin-right: auto;
}

.progress-tracker--right .progress-step {
  text-align: right;
}

.progress-tracker--right .progress-step:last-child {
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
}

.progress-tracker--right .progress-step::after {
  right: calc(-100% + 14px);
}

.progress-tracker--right .progress-marker {
  margin-left: auto;
}

.progress-tracker--border {
  padding: 5px;
  border: 2px solid #868686;
  border-radius: 38px;
}

.progress-tracker--spaced .progress-step::after {
  width: calc(100% - 48px);
  margin-right: 24px;
}

.progress-tracker--word {
  padding-right: 38.6666666667px;
  overflow: hidden;
}

.progress-tracker--word .progress-text {
  display: inline-block;
  white-space: nowrap;
}

.progress-tracker--word .progress-title {
  margin: 0;
}

.progress-tracker--word-center {
  padding-right: 38.6666666667px;
  padding-left: 38.6666666667px;
}

.progress-tracker--word-center .progress-text {
  padding-right: 0;
  padding-left: 0;
  -webkit-transform: translateX(calc(-50% + 14px));
          transform: translateX(calc(-50% + 14px));
}

.progress-tracker--word-right {
  padding-right: 0;
  padding-left: 38.6666666667px;
}

.progress-tracker--word-right .progress-text {
  padding-left: 0;
  -webkit-transform: translateX(calc(-100% + 28px));
          transform: translateX(calc(-100% + 28px));
}

.progress-tracker--text .progress-step:last-child {
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
}

.progress-tracker--text-top .progress-step::after {
  top: auto;
}

.progress-tracker--text-top .progress-text {
  height: 100%;
}

.progress-tracker--text-top .progress-marker {
  bottom: 28px;
}

.progress-tracker--text-inline .progress-step {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.progress-tracker--text-inline .progress-text {
  position: relative;
  z-index: 30;
  max-width: 70%;
  white-space: nowrap;
  padding-top: 0;
  padding-bottom: 0;
  background-color: #fff;
}

.progress-tracker--text-inline .progress-title {
  margin: 0;
}

.progress-tracker--square .progress-step {
  padding-top: 0;
}

.progress-tracker--square .progress-marker {
  -webkit-transform: scaleX(0.33) translateY(-12px);
          transform: scaleX(0.33) translateY(-12px);
  border-radius: 0;
}

@media (max-width: 399px) {
  .progress-tracker-mobile {
    overflow-x: auto;
  }
  .progress-tracker-mobile .progress-tracker {
    min-width: 200%;
  }
}

.progress-tracker--vertical {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}

.progress-tracker--vertical .progress-step {
  -webkit-box-flex: 1;
      -ms-flex: 1 1 auto;
          flex: 1 1 auto;
}

.progress-tracker--vertical .progress-step::after {
  right: auto;
  top: 14px;
  left: 12px;
  width: 4px;
  height: 100%;
}

.progress-tracker--vertical .progress-marker {
  position: absolute;
  left: 0;
}

.progress-tracker--vertical .progress-text {
  padding-top: 7px;
  padding-left: 42px;
}

.progress-tracker--vertical .progress-step:not(:last-child) .progress-text {
  padding-bottom: 42px;
}

@-webkit-keyframes scale-up {
  from {
    opacity: 1;
    -webkit-transform: translate(-50%, -50%) scale(0);
            transform: translate(-50%, -50%) scale(0);
  }
  to {
    opacity: 0;
    -webkit-transform: translate(-50%, -50%) scale(1);
            transform: translate(-50%, -50%) scale(1);
  }
}

@keyframes scale-up {
  from {
    opacity: 1;
    -webkit-transform: translate(-50%, -50%) scale(0);
            transform: translate(-50%, -50%) scale(0);
  }
  to {
    opacity: 0;
    -webkit-transform: translate(-50%, -50%) scale(1);
            transform: translate(-50%, -50%) scale(1);
  }
}

.anim-ripple .progress-marker::before, .anim-ripple-large .progress-marker::before, .anim-ripple-splash .progress-marker::before {
  content: "";
  display: block;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 50%;
  left: 50%;
  z-index: 30;
  background: rgba(0, 0, 0, 0.3);
  border-radius: 50%;
  -webkit-transform: translate(-50%, -50%) scale(0);
          transform: translate(-50%, -50%) scale(0);
  visibility: hidden;
}

.anim-ripple :not(:active) .progress-marker::before, .anim-ripple-large :not(:active) .progress-marker::before, .anim-ripple-splash :not(:active) .progress-marker::before {
  -webkit-animation: scale-up 0.3s ease-out;
          animation: scale-up 0.3s ease-out;
}

.anim-ripple :focus .progress-marker::before, .anim-ripple-large :focus .progress-marker::before, .anim-ripple-splash :focus .progress-marker::before {
  visibility: visible;
}

.anim-ripple-large .progress-marker::before {
  width: 200%;
  height: 200%;
}

.anim-ripple-splash .progress-marker::before {
  width: 200%;
  height: 200%;
  box-shadow: 0 0 6px 6px rgba(0, 0, 0, 0.35);
}

.anim-ripple-double .progress-marker::before, .anim-ripple-double .progress-marker::after {
  content: "";
  display: block;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 50%;
  left: 50%;
  z-index: 30;
  background: rgba(0, 0, 0, 0.3);
  border-radius: 50%;
  -webkit-transform: translate(-50%, -50%) scale(0);
          transform: translate(-50%, -50%) scale(0);
  visibility: hidden;
  background: none;
  border: 3px solid rgba(0, 0, 0, 0.3);
}

.anim-ripple-double :not(:active) .progress-marker::before, .anim-ripple-double :not(:active) .progress-marker::after {
  -webkit-animation: scale-up 0.3s ease-out 0s;
          animation: scale-up 0.3s ease-out 0s;
}

.anim-ripple-double :not(:active) .progress-marker::after {
  -webkit-animation-delay: 0.15s;
          animation-delay: 0.15s;
}

.anim-ripple-double :focus .progress-marker::before, .anim-ripple-double :focus .progress-marker::after {
  visibility: visible;
}

.anim-path .progress-step::after {
  background-image: linear-gradient(to right, #b6b6b6 50%, #868686 50%);
  background-size: 200% 100%;
  background-position: 0% 100%;
  transition: background-position 0.3s ease-out;
}

.anim-path .progress-step.is-complete::after {
  background-position: -100% 100%;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2dyZXNzLXRyYWNrZXIvX3Byb2dyZXNzLXRyYWNrZXIuc2NzcyIsInByb2dyZXNzLXRyYWNrZXIvX3Byb2dyZXNzLXRyYWNrZXItdmFyaWFibGVzLnNjc3MiLCJwcm9ncmVzcy10cmFja2VyLmNzcyIsInByb2dyZXNzLXRyYWNrZXIvX3Byb2dyZXNzLXRyYWNrZXItYW5pbWF0aW9ucy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU1BO0VBQ0UscUJBQWM7RUFBZCxxQkFBYztFQUFkLGNBQWM7RUFDZCxrQkFBa0I7RUFDbEIsV0FBVztFQUNYLGlCQUFpQjtDQUNsQjs7QUFHQztFQUNFLGVBQWU7RUFDZixtQkFBbUI7RUFDbkIsb0JBQWE7TUFBYixpQkFBYTtVQUFiLGFBQWE7RUFDYixVQUFVO0VBQ1YsV0FBVztFQUNYLGdCQ1A0QjtDRHVDN0I7O0FBdENEO0VBVUksb0JBQWE7TUFBYixxQkFBYTtVQUFiLGFBQWE7Q0FDZDs7QUFYSDtFQWVJLFlBQVk7RUFDWixlQUFlO0VBQ2YsbUJBQW1CO0VBQ25CLGFBQWE7RUFDYixVQ2J1QztFRGN2QyxhQ2R1QztFRGV2QyxhQ3JCbUM7RURzQm5DLFlBQVk7RUFDWixZQ2xCeUI7RURtQnpCLGtDQ04wQjtDRE8zQjs7QUF6Qkg7RUE4Qk0saUJBQWlCO0NBQ2xCOztBQS9CTDtFQW1DSSxlQUFlO0NBQ2hCOztBQUtEO0VBQ0UscUJBQWM7RUFBZCxxQkFBYztFQUFkLGNBQWM7RUFDZCx5QkFBd0I7TUFBeEIsc0JBQXdCO1VBQXhCLHdCQUF3QjtFQUN4QiwwQkFBb0I7TUFBcEIsdUJBQW9CO1VBQXBCLG9CQUFvQjtFQUNwQixtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLFlDaEQwQjtFRGlEMUIsYUNqRDBCO0VEa0QxQixvQkFBb0I7RUFDcEIsWUFBWTtFQUNaLGlCQUFpQjtFQUNqQiw4QkFBOEI7RUFDOUIsbUJBQW1CO0VBQ25CLDJDQUEyQztFQUMzQywwQkNyQzBCO0NEc0MzQjs7QUFJSDtFQUNFLGVBQWU7RUFD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ZUFBZTtFQUNmLFlBQVk7RUFDWixhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLFNBQVM7RUFDVCxVQUFVO0VBQ1YsWUFBWTtFQUNaLCtCRm9COEI7RUVuQjlCLG1CQUFtQjtFQUNuQixrREFBc0M7VUFBdEMsMENBQXNDO0VBQ3RDLG1CQUFtQjtDQTJCbEI7O0FBSkg7RUFPSSwwQ0FBZ0Q7VUFBaEQsa0NBQWdEO0NBQ2pEOztBQVJIO0VBbkJFLG9CQUFvQjtDQStCbkI7O0FBS0g7RUFHSSxZQUFZO0VBQ1osYUFBYTtDQUNkOztBQUtIO0VBR0ksWUFBWTtFQUNaLGFBQWE7RUFDYiw0Q0FBNEI7Q0FDN0I7O0FBS0g7RUF4RUUsWUFBWTtFQUNaLGVBQWU7RUFDZixZQUFZO0VBQ1osYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixTQUFTO0VBQ1QsVUFBVTtFQUNWLFlBQVk7RUFDWiwrQkZvQjhCO0VFbkI5QixtQkFBbUI7RUFDbkIsa0RBQXNDO1VBQXRDLDBDQUFzQztFQUN0QyxtQkFBbUI7RUFrRWYsaUJBQWlCO0VBQ2pCLHFDRmxEMEI7Q0VtRDNCOztBQVBMO0VBWU0sNkNBQW1EO1VBQW5ELHFDQUFtRDtDQUNwRDs7QUFiTDtFQWVNLCtCQUFvQztVQUFwQyx1QkFBb0M7Q0FDckM7O0FBaEJMO0VBekRFLG9CQUFvQjtDQStFakI7O0FBTUw7RUFLTSxzRUFBaUM7RUFDakMsMkJBQTJCO0VBQzNCLDZCQUE2QjtFQUM3Qiw4Q0FBNEQ7Q0FDN0Q7O0FBVEw7RUFZTSxnQ0FBZ0M7Q0FDakMiLCJmaWxlIjoicHJvZ3Jlc3MtdHJhY2tlci5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvLyAtLS0tLSBQcm9ncmVzcyBUcmFja2VyIC0tLS0tXG5cblxuLy8gLS0tLS0gRWxlbWVudHMgLS0tLS1cblxuLy8gQ29udGFpbmVyIGVsZW1lbnRcbi5wcm9ncmVzcy10cmFja2VyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgbWFyZ2luOiA0MHB4IGF1dG87XG4gIHBhZGRpbmc6IDA7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbi8vIFN0ZXAgY29udGFpbmVyIHRoYXQgY3JlYXRlcyBsaW5lcyBiZXR3ZWVuIHN0ZXBzXG4gIC5wcm9ncmVzcy1zdGVwIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZmxleDogMSAxIDAlO1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIG1pbi13aWR0aDogJG1hcmtlci1zaXplOyAvLyBGb3IgYSBmbGV4Ym94IGJ1ZyBpbiBmaXJlZm94IHRoYXQgd29udCBhbGxvdyB0aGUgdGV4dCBvdmVyZmxvdyBvbiB0aGUgdGV4dFxuXG4gICAgLy8gU3RvcHMgdGhlIGxhc3Qgc3RlcCBncm93aW5nXG4gICAgJjpsYXN0LWNoaWxkIHtcbiAgICAgIGZsZXgtZ3JvdzogMDtcbiAgICB9XG5cbiAgICAvLyBQYXRoIGJldHdlZW4gbWFya2VycywgdGhpcyBpcyBub3QgY3JlYXRlZCBmb3IgdGhlIGxhc3Qgc3RlcFxuICAgICY6bm90KDpsYXN0LWNoaWxkKTo6YWZ0ZXIge1xuICAgICAgY29udGVudDogJyc7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHotaW5kZXg6IC0xMDtcbiAgICAgIHRvcDogJHBhdGgtcG9zaXRpb247XG4gICAgICBib3R0b206ICRwYXRoLXBvc2l0aW9uO1xuICAgICAgcmlnaHQ6IC0gJG1hcmtlci1zaXplLWhhbGY7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGhlaWdodDogJHBhdGgtaGVpZ2h0O1xuICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAkYW5pbWF0aW9uLWR1cmF0aW9uO1xuICAgIH1cblxuICAgIC8vIEFjdGl2ZSBzdGF0ZVxuICAgICYuaXMtYWN0aXZlIHtcbiAgICAgIC5wcm9ncmVzcy10aXRsZSB7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgICB9XG4gICAgfVxuXG4gICAgPiBhIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cblxuICB9XG5cbi8vIFByb2dyZXNzIG1hcmtlclxuICAgIC5wcm9ncmVzcy1tYXJrZXIge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIHotaW5kZXg6IDIwO1xuICAgICAgd2lkdGg6ICRtYXJrZXItc2l6ZTtcbiAgICAgIGhlaWdodDogJG1hcmtlci1zaXplO1xuICAgICAgcGFkZGluZy1ib3R0b206IDJweDsgLy8gVG8gYWxpZ24gdGV4dCB3aXRoaW4gdGhlIG1hcmtlclxuICAgICAgY29sb3I6ICNmZmY7XG4gICAgICBmb250LXdlaWdodDogNDAwO1xuICAgICAgYm9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yLCBib3JkZXItY29sb3I7XG4gICAgICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAkYW5pbWF0aW9uLWR1cmF0aW9uO1xuICAgIH1cblxuXG4vLyBQcm9ncmVzcyB0ZXh0XG4gIC5wcm9ncmVzcy10ZXh0IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwYWRkaW5nOiAkdGV4dC1wYWRkaW5nLVkgJHRleHQtcGFkZGluZy1YO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gIH1cbiAgICAucHJvZ3Jlc3MtdGl0bGUge1xuICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICB9XG5cblxuLy8gU3RlcCBzdGF0ZSBtaXhpbiAtIFRoZSBmaXJzdCBhcnVnbWVudCBpcyByZXF1aXJlZCBhbmQgdGhlIHJlc3QgYXJlIG9wdGlvbmFsLCBpZiB5b3UgcGFzcyBpbiBudWxsIHRoZSB2YWx1ZSB3aWxsIG5vdCBiZSBjaGFuZ2VkLlxuQG1peGluIHByb2dyZXNzLXN0YXRlKCRtYXJrZXItY29sb3ItYmcsICRtYXJrZXItY29sb3ItYm9yZGVyOiBudWxsLCAkbWFya2VyLWNvbG9yLXRleHQ6IG51bGwsICRwYXRoLWNvbG9yOiBudWxsLCAkdGV4dC1jb2xvcjogbnVsbCkge1xuICAucHJvZ3Jlc3MtbWFya2VyIHtcbiAgICBjb2xvcjogJG1hcmtlci1jb2xvci10ZXh0O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRtYXJrZXItY29sb3ItYmc7XG4gICAgYm9yZGVyLWNvbG9yOiAkbWFya2VyLWNvbG9yLWJvcmRlcjtcbiAgfVxuXG4gICY6OmFmdGVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkcGF0aC1jb2xvcjtcbiAgfVxuXG4gIC5wcm9ncmVzcy10ZXh0LCAucHJvZ3Jlc3Mtc3RlcCA+IGEgLnByb2dyZXNzLXRleHQge1xuICAgIGNvbG9yOiAkdGV4dC1jb2xvcjtcbiAgfVxufVxuXG5cbi8vIFN0YXRlc1xuICAucHJvZ3Jlc3Mtc3RlcCB7XG5cbiAgICAvLyBJbmFjdGl2ZSAtIERlZmF1bHQgc3RhdGVcbiAgICBAaW5jbHVkZSBwcm9ncmVzcy1zdGF0ZSgkcHJvZ3Jlc3MtY29sb3ItZ3JleS1saWdodCwgbnVsbCwgI2ZmZiwgJHByb2dyZXNzLWNvbG9yLWdyZXktbGlnaHQsICRwcm9ncmVzcy1jb2xvci1ncmV5LWRhcmspO1xuXG4gICAgLy8gQWN0aXZlIHN0YXRlXG4gICAgJi5pcy1hY3RpdmUge1xuICAgICAgQGluY2x1ZGUgcHJvZ3Jlc3Mtc3RhdGUoJHByb2dyZXNzLWNvbG9yKTtcbiAgICB9XG5cbiAgICAvLyBDb21wbGV0ZSBzdGF0ZVxuICAgICYuaXMtY29tcGxldGUge1xuICAgICAgQGluY2x1ZGUgcHJvZ3Jlc3Mtc3RhdGUoJHByb2dyZXNzLWNvbG9yLWRhcmssICRwYXRoLWNvbG9yOiAkcHJvZ3Jlc3MtY29sb3ItZ3JleSk7XG4gICAgfVxuXG4gICAgLy8gSG92ZXIgc3RhdGVcbiAgICAmOmhvdmVyIHtcbiAgICAgIEBpbmNsdWRlIHByb2dyZXNzLXN0YXRlKCRwcm9ncmVzcy1jb2xvci1saWdodCk7XG4gICAgfVxuXG4gIH1cblxuXG5cbi8vIC0tLS0tIE1vZGlmaWVycyAtLS0tLVxuXG4vLyBDZW50ZXIgYWxpZ24gbWFya2VycyBhbmQgdGV4dFxuLnByb2dyZXNzLXRyYWNrZXItLWNlbnRlciB7XG5cbiAgLnByb2dyZXNzLXN0ZXAge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICBmbGV4LWdyb3c6IDE7XG4gICAgfVxuXG4gICAgJjo6YWZ0ZXIge1xuICAgICAgcmlnaHQ6IC01MCU7XG4gICAgfVxuICB9XG5cbiAgICAucHJvZ3Jlc3MtbWFya2VyIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICAgIH1cbn1cblxuXG4vLyBSaWdodCBhbGlnbiBtYXJrZXJzIGFuZCB0ZXh0XG4ucHJvZ3Jlc3MtdHJhY2tlci0tcmlnaHQge1xuXG4gIC5wcm9ncmVzcy1zdGVwIHtcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcblxuICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICBmbGV4LWdyb3c6IDE7XG4gICAgfVxuXG4gICAgJjo6YWZ0ZXIge1xuICAgICAgcmlnaHQ6IGNhbGMoLTEwMCUgKyAjeyRtYXJrZXItc2l6ZS1oYWxmfSk7XG4gICAgfVxuICB9XG5cbiAgICAucHJvZ3Jlc3MtbWFya2VyIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIH1cbn1cblxuXG4vLyBCb3JkZXIgYXJvdW5kIHN0ZXBzIChPbmx5IGZvciB1c2Ugd2l0aG91dCB0ZXh0KVxuLnByb2dyZXNzLXRyYWNrZXItLWJvcmRlciB7XG4gIHBhZGRpbmc6ICRwcm9ncmVzcy10cmFja2VyLXBhZGRpbmc7XG4gIGJvcmRlcjogMnB4IHNvbGlkICRwcm9ncmVzcy1jb2xvci1ncmV5O1xuICBib3JkZXItcmFkaXVzOiAkbWFya2VyLXNpemUgKyAoJHByb2dyZXNzLXRyYWNrZXItcGFkZGluZyAqIDIpO1xufVxuXG5cbi8vIFNwYWNlcyBiZXR3ZWVuIG1hcmtlcnNcbi5wcm9ncmVzcy10cmFja2VyLS1zcGFjZWQge1xuXG4gIC5wcm9ncmVzcy1zdGVwIHtcblxuICAgICY6OmFmdGVyIHtcbiAgICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAjeyRtYXJrZXItc2l6ZSArICgkbWFya2VyLXNwYWNpbmcgKiAyKX0pO1xuICAgICAgbWFyZ2luLXJpZ2h0OiAoJG1hcmtlci1zaXplLWhhbGYgKyAkbWFya2VyLXNwYWNpbmcpO1xuICAgIH1cbiAgfVxuXG59XG5cblxuLy8gV29yZCBiZWxvdyBtYXJrZXJzXG4ucHJvZ3Jlc3MtdHJhY2tlci0td29yZCB7XG4gIHBhZGRpbmctcmlnaHQ6ICRwcm9ncmVzcy10cmFja2VyLXdvcmQtcGFkZGluZztcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcblxuICAucHJvZ3Jlc3MtdGV4dCB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIH1cblxuICAgIC5wcm9ncmVzcy10aXRsZSB7XG4gICAgICBtYXJnaW46IDA7XG4gICAgfVxuXG59XG5cblxuLnByb2dyZXNzLXRyYWNrZXItLXdvcmQtY2VudGVyIHtcbiAgcGFkZGluZy1yaWdodDogJHByb2dyZXNzLXRyYWNrZXItd29yZC1wYWRkaW5nO1xuICBwYWRkaW5nLWxlZnQ6ICRwcm9ncmVzcy10cmFja2VyLXdvcmQtcGFkZGluZztcblxuICAucHJvZ3Jlc3MtdGV4dCB7XG4gICAgcGFkZGluZy1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKGNhbGMoLTUwJSArICN7JG1hcmtlci1zaXplLWhhbGZ9KSk7XG4gIH1cblxufVxuXG5cbi5wcm9ncmVzcy10cmFja2VyLS13b3JkLXJpZ2h0IHtcbiAgcGFkZGluZy1yaWdodDogMDtcbiAgcGFkZGluZy1sZWZ0OiAkcHJvZ3Jlc3MtdHJhY2tlci13b3JkLXBhZGRpbmc7XG5cbiAgLnByb2dyZXNzLXRleHQge1xuICAgIHBhZGRpbmctbGVmdDogMDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoY2FsYygtMTAwJSArICN7JG1hcmtlci1zaXplfSkpO1xuICB9XG5cbn1cblxuXG4vLyBUZXh0IGJlbG93IG1hcmtlcnNcbi5wcm9ncmVzcy10cmFja2VyLS10ZXh0IHtcblxuICAucHJvZ3Jlc3Mtc3RlcCB7XG5cbiAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgZmxleC1ncm93OiAxO1xuICAgIH1cbiAgfVxuXG59XG5cblxuLy8gVGV4dCBhYm92ZSBtYXJrZXJzXG4ucHJvZ3Jlc3MtdHJhY2tlci0tdGV4dC10b3Age1xuXG4gIC5wcm9ncmVzcy1zdGVwOjphZnRlciB7XG4gICAgdG9wOiBhdXRvO1xuICB9XG5cbiAgICAucHJvZ3Jlc3MtdGV4dCB7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgfVxuXG4gICAgLnByb2dyZXNzLW1hcmtlciB7XG4gICAgICBib3R0b206ICRtYXJrZXItc2l6ZTtcbiAgICB9XG5cbn1cblxuXG4vLyBUZXh0IGlubGluZSB3aXRoIG1hcmtlcnNcbi5wcm9ncmVzcy10cmFja2VyLS10ZXh0LWlubGluZSB7XG5cbiAgLnByb2dyZXNzLXN0ZXAge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gIH1cblxuICAgIC5wcm9ncmVzcy10ZXh0IHtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIHotaW5kZXg6IDMwO1xuICAgICAgbWF4LXdpZHRoOiA3MCU7XG4gICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAgcGFkZGluZy10b3A6IDA7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgfVxuXG4gICAgICAucHJvZ3Jlc3MtdGl0bGUge1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICB9XG5cbn1cblxuXG4vLyBTcXVhcmUgbWFya2Vyc1xuLnByb2dyZXNzLXRyYWNrZXItLXNxdWFyZSB7XG5cbiAgLnByb2dyZXNzLXN0ZXAge1xuICAgIHBhZGRpbmctdG9wOiAwO1xuICB9XG5cbiAgICAucHJvZ3Jlc3MtbWFya2VyIHtcbiAgICAgIHRyYW5zZm9ybTogc2NhbGVYKDAuMzMpIHRyYW5zbGF0ZVkoLSAkcGF0aC1wb3NpdGlvbik7XG4gICAgICBib3JkZXItcmFkaXVzOiAwO1xuICAgIH1cblxufVxuXG5cbi8vIE92ZXJmbG93IG9uIHNtYWxsIHNjcmVlbnNcbkBtZWRpYSAobWF4LXdpZHRoOiAzOTlweCkge1xuICAucHJvZ3Jlc3MtdHJhY2tlci1tb2JpbGUge1xuICAgIG92ZXJmbG93LXg6IGF1dG87XG5cbiAgICAucHJvZ3Jlc3MtdHJhY2tlciB7XG4gICAgICBtaW4td2lkdGg6IDIwMCU7XG4gICAgfVxuICB9XG59XG5cblxuLy8gVmVydGljYWwgbGF5b3V0XG4ucHJvZ3Jlc3MtdHJhY2tlci0tdmVydGljYWwge1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXG4gIC5wcm9ncmVzcy1zdGVwIHtcbiAgICBmbGV4OiAxIDEgYXV0bztcblxuICAgICY6OmFmdGVyIHtcbiAgICAgIHJpZ2h0OiBhdXRvO1xuICAgICAgdG9wOiAkbWFya2VyLXNpemUtaGFsZjtcbiAgICAgIGxlZnQ6ICRwYXRoLXBvc2l0aW9uO1xuICAgICAgd2lkdGg6ICRwYXRoLWhlaWdodDtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICB9XG4gIH1cblxuICAgIC5wcm9ncmVzcy1tYXJrZXIge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgbGVmdDogMDtcbiAgICB9XG5cbiAgICAucHJvZ3Jlc3MtdGV4dCB7XG4gICAgICBwYWRkaW5nLXRvcDogJG1hcmtlci1zaXplLXF1YXJ0ZXI7XG4gICAgICBwYWRkaW5nLWxlZnQ6ICR0ZXh0LXBhZGRpbmctLXZlcnRpY2FsO1xuICAgIH1cblxuICAgIC5wcm9ncmVzcy1zdGVwOm5vdCg6bGFzdC1jaGlsZCkgLnByb2dyZXNzLXRleHQge1xuICAgICAgcGFkZGluZy1ib3R0b206ICR0ZXh0LXBhZGRpbmctLXZlcnRpY2FsO1xuICAgIH1cbn1cbiIsIi8vIC0tLS0tIFZhcmlhYmxlcyAtLS0tLVxuXG4vLyBDb2xvdXJzXG4kcHJvZ3Jlc3MtY29sb3ItZGFyazogICAgICAgIzE5NzZEMiAhZGVmYXVsdDtcbiRwcm9ncmVzcy1jb2xvcjogICAgICAgICAgICAjMjE5NkYzICFkZWZhdWx0O1xuJHByb2dyZXNzLWNvbG9yLWxpZ2h0OiAgICAgICM1NkFERjUgIWRlZmF1bHQ7XG4kcHJvZ3Jlc3MtY29sb3ItZ3JleS1saWdodDogI2I2YjZiNiAhZGVmYXVsdDtcbiRwcm9ncmVzcy1jb2xvci1ncmV5OiAgICAgICAjODY4Njg2ICFkZWZhdWx0O1xuJHByb2dyZXNzLWNvbG9yLWdyZXktZGFyazogICMzMzMzMzMgIWRlZmF1bHQ7XG5cbi8vIFNpemluZ1xuJHByb2dyZXNzLXRyYWNrZXItcGFkZGluZzogIDVweCAhZGVmYXVsdDtcblxuJG1hcmtlci1zaXplOiAgICAgICAgICAgICAgIDI4cHggIWRlZmF1bHQ7XG4kbWFya2VyLXNpemUtaGFsZjogICAgICAgICAgKCRtYXJrZXItc2l6ZSAvIDIpO1xuJG1hcmtlci1zaXplLXRoaXJkOiAgICAgICAgICgkbWFya2VyLXNpemUgLyAzKTtcbiRtYXJrZXItc2l6ZS1xdWFydGVyOiAgICAgICAoJG1hcmtlci1zaXplIC8gNCk7XG4kbWFya2VyLXNwYWNpbmc6ICAgICAgICAgICAgMTBweCAhZGVmYXVsdDtcblxuJHBhdGgtaGVpZ2h0OiAgICAgICAgICAgICAgIDRweCAhZGVmYXVsdDtcbiRwYXRoLXBvc2l0aW9uOiAgICAgICAgICAgICAkbWFya2VyLXNpemUtaGFsZiAtICgkcGF0aC1oZWlnaHQgLyAyKTtcblxuJHRleHQtcGFkZGluZzogICAgICAgICAgICAgICRtYXJrZXItc2l6ZS1oYWxmICFkZWZhdWx0O1xuJHRleHQtcGFkZGluZy1YOiAgICAgICAgICAgICRtYXJrZXItc2l6ZS10aGlyZCAhZGVmYXVsdDtcbiR0ZXh0LXBhZGRpbmctWTogICAgICAgICAgICAkbWFya2VyLXNpemUtaGFsZiAhZGVmYXVsdDtcbiR0ZXh0LXBhZGRpbmctLXZlcnRpY2FsOiAgICAkbWFya2VyLXNpemUgKyAkbWFya2VyLXNpemUtaGFsZiAhZGVmYXVsdDtcblxuLy8gT25seSBuZWVkZWQgZm9yIHNob3J0IHRleHQgdmVyc2lvbiwgdGhlIHdvcmQgc2l6ZSBzaG91bGQgYmUgdGhlIHdpZHRoIG9mIHRoZSB3aWRlc3Qgd29yZCB3aXRob3V0IHBhZGRpbmcuXG4kd29yZC1zaXplOiAgICAgICAgICAgICAgICAgICAgIDU0cHggIWRlZmF1bHQ7XG4kcHJvZ3Jlc3MtdHJhY2tlci13b3JkLXBhZGRpbmc6ICgkd29yZC1zaXplICsgJHRleHQtcGFkZGluZy1YICsgJG1hcmtlci1zaXplLWhhbGYpIC8gMjtcblxuLy8gQW5pbWF0aW9ucy9UcmFuc2l0aW9uc1xuJGFuaW1hdGlvbi1kdXJhdGlvbjogICAgICAgIDAuM3MgIWRlZmF1bHQ7XG4kcmlwcGxlLWNvbG9yOiAgICAgICAgICAgICAgcmdiYSgwLCAwLCAwLCAwLjMpICFkZWZhdWx0O1xuIiwiLnByb2dyZXNzLXRyYWNrZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBtYXJnaW46IDQwcHggYXV0bztcbiAgcGFkZGluZzogMDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuLnByb2dyZXNzLXN0ZXAge1xuICBkaXNwbGF5OiBibG9jaztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBmbGV4OiAxIDEgMCU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgbWluLXdpZHRoOiAyOHB4O1xufVxuXG4ucHJvZ3Jlc3Mtc3RlcDpsYXN0LWNoaWxkIHtcbiAgZmxleC1ncm93OiAwO1xufVxuXG4ucHJvZ3Jlc3Mtc3RlcDpub3QoOmxhc3QtY2hpbGQpOjphZnRlciB7XG4gIGNvbnRlbnQ6ICcnO1xuICBkaXNwbGF5OiBibG9jaztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB6LWluZGV4OiAtMTA7XG4gIHRvcDogMTJweDtcbiAgYm90dG9tOiAxMnB4O1xuICByaWdodDogLTE0cHg7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDRweDtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzO1xufVxuXG4ucHJvZ3Jlc3Mtc3RlcC5pcy1hY3RpdmUgLnByb2dyZXNzLXRpdGxlIHtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbn1cblxuLnByb2dyZXNzLXN0ZXAgPiBhIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5wcm9ncmVzcy1tYXJrZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAyMDtcbiAgd2lkdGg6IDI4cHg7XG4gIGhlaWdodDogMjhweDtcbiAgcGFkZGluZy1ib3R0b206IDJweDtcbiAgY29sb3I6ICNmZmY7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGJvcmRlcjogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IsIGJvcmRlci1jb2xvcjtcbiAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMC4zcztcbn1cblxuLnByb2dyZXNzLXRleHQge1xuICBkaXNwbGF5OiBibG9jaztcbiAgcGFkZGluZzogMTRweCA5LjMzMzMzMzMzMzNweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG59XG5cbi5wcm9ncmVzcy10aXRsZSB7XG4gIG1hcmdpbi10b3A6IDA7XG59XG5cbi5wcm9ncmVzcy1zdGVwIC5wcm9ncmVzcy1tYXJrZXIge1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2I2YjZiNjtcbn1cblxuLnByb2dyZXNzLXN0ZXA6OmFmdGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2I2YjZiNjtcbn1cblxuLnByb2dyZXNzLXN0ZXAgLnByb2dyZXNzLXRleHQsIC5wcm9ncmVzcy1zdGVwIC5wcm9ncmVzcy1zdGVwID4gYSAucHJvZ3Jlc3MtdGV4dCB7XG4gIGNvbG9yOiAjMzMzMzMzO1xufVxuXG4ucHJvZ3Jlc3Mtc3RlcC5pcy1hY3RpdmUgLnByb2dyZXNzLW1hcmtlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyMTk2RjM7XG59XG5cbi5wcm9ncmVzcy1zdGVwLmlzLWNvbXBsZXRlIC5wcm9ncmVzcy1tYXJrZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTk3NkQyO1xufVxuXG4ucHJvZ3Jlc3Mtc3RlcC5pcy1jb21wbGV0ZTo6YWZ0ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjODY4Njg2O1xufVxuXG4ucHJvZ3Jlc3Mtc3RlcDpob3ZlciAucHJvZ3Jlc3MtbWFya2VyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzU2QURGNTtcbn1cblxuLnByb2dyZXNzLXRyYWNrZXItLWNlbnRlciAucHJvZ3Jlc3Mtc3RlcCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLnByb2dyZXNzLXRyYWNrZXItLWNlbnRlciAucHJvZ3Jlc3Mtc3RlcDpsYXN0LWNoaWxkIHtcbiAgZmxleC1ncm93OiAxO1xufVxuXG4ucHJvZ3Jlc3MtdHJhY2tlci0tY2VudGVyIC5wcm9ncmVzcy1zdGVwOjphZnRlciB7XG4gIHJpZ2h0OiAtNTAlO1xufVxuXG4ucHJvZ3Jlc3MtdHJhY2tlci0tY2VudGVyIC5wcm9ncmVzcy1tYXJrZXIge1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xufVxuXG4ucHJvZ3Jlc3MtdHJhY2tlci0tcmlnaHQgLnByb2dyZXNzLXN0ZXAge1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cblxuLnByb2dyZXNzLXRyYWNrZXItLXJpZ2h0IC5wcm9ncmVzcy1zdGVwOmxhc3QtY2hpbGQge1xuICBmbGV4LWdyb3c6IDE7XG59XG5cbi5wcm9ncmVzcy10cmFja2VyLS1yaWdodCAucHJvZ3Jlc3Mtc3RlcDo6YWZ0ZXIge1xuICByaWdodDogY2FsYygtMTAwJSArIDE0cHgpO1xufVxuXG4ucHJvZ3Jlc3MtdHJhY2tlci0tcmlnaHQgLnByb2dyZXNzLW1hcmtlciB7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xufVxuXG4ucHJvZ3Jlc3MtdHJhY2tlci0tYm9yZGVyIHtcbiAgcGFkZGluZzogNXB4O1xuICBib3JkZXI6IDJweCBzb2xpZCAjODY4Njg2O1xuICBib3JkZXItcmFkaXVzOiAzOHB4O1xufVxuXG4ucHJvZ3Jlc3MtdHJhY2tlci0tc3BhY2VkIC5wcm9ncmVzcy1zdGVwOjphZnRlciB7XG4gIHdpZHRoOiBjYWxjKDEwMCUgLSA0OHB4KTtcbiAgbWFyZ2luLXJpZ2h0OiAyNHB4O1xufVxuXG4ucHJvZ3Jlc3MtdHJhY2tlci0td29yZCB7XG4gIHBhZGRpbmctcmlnaHQ6IDM4LjY2NjY2NjY2NjdweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLnByb2dyZXNzLXRyYWNrZXItLXdvcmQgLnByb2dyZXNzLXRleHQge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG59XG5cbi5wcm9ncmVzcy10cmFja2VyLS13b3JkIC5wcm9ncmVzcy10aXRsZSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLnByb2dyZXNzLXRyYWNrZXItLXdvcmQtY2VudGVyIHtcbiAgcGFkZGluZy1yaWdodDogMzguNjY2NjY2NjY2N3B4O1xuICBwYWRkaW5nLWxlZnQ6IDM4LjY2NjY2NjY2NjdweDtcbn1cblxuLnByb2dyZXNzLXRyYWNrZXItLXdvcmQtY2VudGVyIC5wcm9ncmVzcy10ZXh0IHtcbiAgcGFkZGluZy1yaWdodDogMDtcbiAgcGFkZGluZy1sZWZ0OiAwO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoY2FsYygtNTAlICsgMTRweCkpO1xufVxuXG4ucHJvZ3Jlc3MtdHJhY2tlci0td29yZC1yaWdodCB7XG4gIHBhZGRpbmctcmlnaHQ6IDA7XG4gIHBhZGRpbmctbGVmdDogMzguNjY2NjY2NjY2N3B4O1xufVxuXG4ucHJvZ3Jlc3MtdHJhY2tlci0td29yZC1yaWdodCAucHJvZ3Jlc3MtdGV4dCB7XG4gIHBhZGRpbmctbGVmdDogMDtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKGNhbGMoLTEwMCUgKyAyOHB4KSk7XG59XG5cbi5wcm9ncmVzcy10cmFja2VyLS10ZXh0IC5wcm9ncmVzcy1zdGVwOmxhc3QtY2hpbGQge1xuICBmbGV4LWdyb3c6IDE7XG59XG5cbi5wcm9ncmVzcy10cmFja2VyLS10ZXh0LXRvcCAucHJvZ3Jlc3Mtc3RlcDo6YWZ0ZXIge1xuICB0b3A6IGF1dG87XG59XG5cbi5wcm9ncmVzcy10cmFja2VyLS10ZXh0LXRvcCAucHJvZ3Jlc3MtdGV4dCB7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLnByb2dyZXNzLXRyYWNrZXItLXRleHQtdG9wIC5wcm9ncmVzcy1tYXJrZXIge1xuICBib3R0b206IDI4cHg7XG59XG5cbi5wcm9ncmVzcy10cmFja2VyLS10ZXh0LWlubGluZSAucHJvZ3Jlc3Mtc3RlcCB7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi5wcm9ncmVzcy10cmFja2VyLS10ZXh0LWlubGluZSAucHJvZ3Jlc3MtdGV4dCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMzA7XG4gIG1heC13aWR0aDogNzAlO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBwYWRkaW5nLXRvcDogMDtcbiAgcGFkZGluZy1ib3R0b206IDA7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG59XG5cbi5wcm9ncmVzcy10cmFja2VyLS10ZXh0LWlubGluZSAucHJvZ3Jlc3MtdGl0bGUge1xuICBtYXJnaW46IDA7XG59XG5cbi5wcm9ncmVzcy10cmFja2VyLS1zcXVhcmUgLnByb2dyZXNzLXN0ZXAge1xuICBwYWRkaW5nLXRvcDogMDtcbn1cblxuLnByb2dyZXNzLXRyYWNrZXItLXNxdWFyZSAucHJvZ3Jlc3MtbWFya2VyIHtcbiAgdHJhbnNmb3JtOiBzY2FsZVgoMC4zMykgdHJhbnNsYXRlWSgtMTJweCk7XG4gIGJvcmRlci1yYWRpdXM6IDA7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzOTlweCkge1xuICAucHJvZ3Jlc3MtdHJhY2tlci1tb2JpbGUge1xuICAgIG92ZXJmbG93LXg6IGF1dG87XG4gIH1cbiAgLnByb2dyZXNzLXRyYWNrZXItbW9iaWxlIC5wcm9ncmVzcy10cmFja2VyIHtcbiAgICBtaW4td2lkdGg6IDIwMCU7XG4gIH1cbn1cblxuLnByb2dyZXNzLXRyYWNrZXItLXZlcnRpY2FsIHtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLnByb2dyZXNzLXRyYWNrZXItLXZlcnRpY2FsIC5wcm9ncmVzcy1zdGVwIHtcbiAgZmxleDogMSAxIGF1dG87XG59XG5cbi5wcm9ncmVzcy10cmFja2VyLS12ZXJ0aWNhbCAucHJvZ3Jlc3Mtc3RlcDo6YWZ0ZXIge1xuICByaWdodDogYXV0bztcbiAgdG9wOiAxNHB4O1xuICBsZWZ0OiAxMnB4O1xuICB3aWR0aDogNHB4O1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5wcm9ncmVzcy10cmFja2VyLS12ZXJ0aWNhbCAucHJvZ3Jlc3MtbWFya2VyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xufVxuXG4ucHJvZ3Jlc3MtdHJhY2tlci0tdmVydGljYWwgLnByb2dyZXNzLXRleHQge1xuICBwYWRkaW5nLXRvcDogN3B4O1xuICBwYWRkaW5nLWxlZnQ6IDQycHg7XG59XG5cbi5wcm9ncmVzcy10cmFja2VyLS12ZXJ0aWNhbCAucHJvZ3Jlc3Mtc3RlcDpub3QoOmxhc3QtY2hpbGQpIC5wcm9ncmVzcy10ZXh0IHtcbiAgcGFkZGluZy1ib3R0b206IDQycHg7XG59XG5cbkBrZXlmcmFtZXMgc2NhbGUtdXAge1xuICBmcm9tIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpIHNjYWxlKDApO1xuICB9XG4gIHRvIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpIHNjYWxlKDEpO1xuICB9XG59XG5cbi5hbmltLXJpcHBsZSAucHJvZ3Jlc3MtbWFya2VyOjpiZWZvcmUsIC5hbmltLXJpcHBsZS1sYXJnZSAucHJvZ3Jlc3MtbWFya2VyOjpiZWZvcmUsIC5hbmltLXJpcHBsZS1zcGxhc2ggLnByb2dyZXNzLW1hcmtlcjo6YmVmb3JlIHtcbiAgY29udGVudDogXCJcIjtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgei1pbmRleDogMzA7XG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC4zKTtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKSBzY2FsZSgwKTtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xufVxuXG4uYW5pbS1yaXBwbGUgOm5vdCg6YWN0aXZlKSAucHJvZ3Jlc3MtbWFya2VyOjpiZWZvcmUsIC5hbmltLXJpcHBsZS1sYXJnZSA6bm90KDphY3RpdmUpIC5wcm9ncmVzcy1tYXJrZXI6OmJlZm9yZSwgLmFuaW0tcmlwcGxlLXNwbGFzaCA6bm90KDphY3RpdmUpIC5wcm9ncmVzcy1tYXJrZXI6OmJlZm9yZSB7XG4gIGFuaW1hdGlvbjogc2NhbGUtdXAgMC4zcyBlYXNlLW91dDtcbn1cblxuLmFuaW0tcmlwcGxlIDpmb2N1cyAucHJvZ3Jlc3MtbWFya2VyOjpiZWZvcmUsIC5hbmltLXJpcHBsZS1sYXJnZSA6Zm9jdXMgLnByb2dyZXNzLW1hcmtlcjo6YmVmb3JlLCAuYW5pbS1yaXBwbGUtc3BsYXNoIDpmb2N1cyAucHJvZ3Jlc3MtbWFya2VyOjpiZWZvcmUge1xuICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xufVxuXG4uYW5pbS1yaXBwbGUtbGFyZ2UgLnByb2dyZXNzLW1hcmtlcjo6YmVmb3JlIHtcbiAgd2lkdGg6IDIwMCU7XG4gIGhlaWdodDogMjAwJTtcbn1cblxuLmFuaW0tcmlwcGxlLXNwbGFzaCAucHJvZ3Jlc3MtbWFya2VyOjpiZWZvcmUge1xuICB3aWR0aDogMjAwJTtcbiAgaGVpZ2h0OiAyMDAlO1xuICBib3gtc2hhZG93OiAwIDAgNnB4IDZweCByZ2JhKDAsIDAsIDAsIDAuMzUpO1xufVxuXG4uYW5pbS1yaXBwbGUtZG91YmxlIC5wcm9ncmVzcy1tYXJrZXI6OmJlZm9yZSwgLmFuaW0tcmlwcGxlLWRvdWJsZSAucHJvZ3Jlc3MtbWFya2VyOjphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIHotaW5kZXg6IDMwO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuMyk7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSkgc2NhbGUoMCk7XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgYm9yZGVyOiAzcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjMpO1xufVxuXG4uYW5pbS1yaXBwbGUtZG91YmxlIDpub3QoOmFjdGl2ZSkgLnByb2dyZXNzLW1hcmtlcjo6YmVmb3JlLCAuYW5pbS1yaXBwbGUtZG91YmxlIDpub3QoOmFjdGl2ZSkgLnByb2dyZXNzLW1hcmtlcjo6YWZ0ZXIge1xuICBhbmltYXRpb246IHNjYWxlLXVwIDAuM3MgZWFzZS1vdXQgMHM7XG59XG5cbi5hbmltLXJpcHBsZS1kb3VibGUgOm5vdCg6YWN0aXZlKSAucHJvZ3Jlc3MtbWFya2VyOjphZnRlciB7XG4gIGFuaW1hdGlvbi1kZWxheTogMC4xNXM7XG59XG5cbi5hbmltLXJpcHBsZS1kb3VibGUgOmZvY3VzIC5wcm9ncmVzcy1tYXJrZXI6OmJlZm9yZSwgLmFuaW0tcmlwcGxlLWRvdWJsZSA6Zm9jdXMgLnByb2dyZXNzLW1hcmtlcjo6YWZ0ZXIge1xuICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xufVxuXG4uYW5pbS1wYXRoIC5wcm9ncmVzcy1zdGVwOjphZnRlciB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgI2I2YjZiNiA1MCUsICM4Njg2ODYgNTAlKTtcbiAgYmFja2dyb3VuZC1zaXplOiAyMDAlIDEwMCU7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDAlIDEwMCU7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtcG9zaXRpb24gMC4zcyBlYXNlLW91dDtcbn1cblxuLmFuaW0tcGF0aCAucHJvZ3Jlc3Mtc3RlcC5pcy1jb21wbGV0ZTo6YWZ0ZXIge1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTAwJSAxMDAlO1xufVxuIiwiLy8gLS0tLS0gUHJvZ3Jlc3MgVHJhY2tlciBBbmltYXRpb25zIC0tLS0tXG4vLyBBbmltYXRpb24gc2hvdyBhZnRlciBjbGljayB1c2luZyBwdXJlIENTUyBiYXNlZCBvbiBhIHRlY2huaXF1ZSAtIGh0dHBzOi8vZ2hpbmRhLm5ldC9hcnRpY2xlL2Nzcy1yaXBwbGUtbWF0ZXJpYWwtZGVzaWduLyBhbmQgdGhlIE1hdGVyaWFsIGRlc2lnbiByaXBwbGUgLSBodHRwczovL2dldG1kbC5pby9jb21wb25lbnRzLyNidXR0b25zLXNlY3Rpb25cblxuLy8gUmlwcGxlIGVsZW1lbnRzIG1peGluXG5AbWl4aW4gcmlwcGxlLWVsZW1lbnQoKSB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIHotaW5kZXg6IDMwO1xuICBiYWNrZ3JvdW5kOiAkcmlwcGxlLWNvbG9yO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpIHNjYWxlKDApOyAvLyBJbml0aWFsIHN0YXRlLCBzaG91bGQgaGlkZSB0aGUgZWZmZWN0IHdoZW4gbm90IGFuaW1hdGluZ1xuICB2aXNpYmlsaXR5OiBoaWRkZW47IC8vIEhpZGVzIGVsZW1lbnQgc28gaXQgZG9lc250IGFuaW1hdGUgb24gcGFnZSBsb2FkXG59XG5cbkBtaXhpbiByaXBwbGUtZWxlbWVudC1hY3RpdmUoKSB7XG4gIHZpc2liaWxpdHk6IHZpc2libGU7IC8vIFNob3dzIGVsZW1lbnQgd2hlbiBpdCBpcyBmb2N1c2VkXG59XG5cbi8vIEFuaW1hdGlvbiBLZXlmcmFtZXNcbkBrZXlmcmFtZXMgc2NhbGUtdXAge1xuICBmcm9tIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpIHNjYWxlKDApO1xuICB9XG5cbiAgdG8ge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSkgc2NhbGUoMSk7XG4gIH1cbn1cblxuXG5cbi8vIC0tLS0tIFJpcHBsZSBlZmZlY3Qgd2hlbiBtYXJrZXIgaXMgY2xpY2tlZCAtLS0tLVxuLmFuaW0tcmlwcGxlLCAuYW5pbS1yaXBwbGUtbGFyZ2UsIC5hbmltLXJpcHBsZS1zcGxhc2gge1xuXG4gIC5wcm9ncmVzcy1tYXJrZXI6OmJlZm9yZSB7XG4gICAgQGluY2x1ZGUgcmlwcGxlLWVsZW1lbnQoKTtcbiAgfVxuXG4gIDpub3QoOmFjdGl2ZSkgLnByb2dyZXNzLW1hcmtlcjo6YmVmb3JlIHtcbiAgICBhbmltYXRpb246IHNjYWxlLXVwICRhbmltYXRpb24tZHVyYXRpb24gZWFzZS1vdXQ7XG4gIH1cblxuICA6Zm9jdXMgLnByb2dyZXNzLW1hcmtlcjo6YmVmb3JlIHtcbiAgICBAaW5jbHVkZSByaXBwbGUtZWxlbWVudC1hY3RpdmUoKTtcbiAgfVxuXG59XG5cbi8vIC0tLS0tIExhcmdlIHJpcHBsZSB3aGljaCBleHBhbmRzIG91dHNpZGUgb2YgdGhlIGJvdW5kcyBvZiBtYXJrZXIgLS0tLS1cbi5hbmltLXJpcHBsZS1sYXJnZSB7XG5cbiAgLnByb2dyZXNzLW1hcmtlcjo6YmVmb3JlIHtcbiAgICB3aWR0aDogMjAwJTtcbiAgICBoZWlnaHQ6IDIwMCU7XG4gIH1cblxufVxuXG4vLyAtLS0tLSBMYXJnZSByaXBwbGUgd2l0aCBzcGxhc2ggLS0tLS1cbi5hbmltLXJpcHBsZS1zcGxhc2gge1xuXG4gIC5wcm9ncmVzcy1tYXJrZXI6OmJlZm9yZSB7XG4gICAgd2lkdGg6IDIwMCU7XG4gICAgaGVpZ2h0OiAyMDAlO1xuICAgIGJveC1zaGFkb3c6IDAgMCA2cHggNnB4IHJnYmEoMCwgMCwgMCwgMC4zNSk7XG4gIH1cblxufVxuXG4vLyAtLS0tLSBEb3VibGUgcmlwcGxlIGVmZmVjdCwgc2ltaWxhciB0byBhbiBhY3R1YWwgd2F0ZXIgcmlwcGxlIC0tLS0tXG4uYW5pbS1yaXBwbGUtZG91YmxlIHtcblxuICAucHJvZ3Jlc3MtbWFya2VyIHtcbiAgICAmOjpiZWZvcmUsICY6OmFmdGVyIHtcbiAgICAgIEBpbmNsdWRlIHJpcHBsZS1lbGVtZW50KCk7XG4gICAgICBiYWNrZ3JvdW5kOiBub25lO1xuICAgICAgYm9yZGVyOiAzcHggc29saWQgJHJpcHBsZS1jb2xvcjtcbiAgICB9XG4gIH1cblxuICA6bm90KDphY3RpdmUpIC5wcm9ncmVzcy1tYXJrZXIge1xuICAgICY6OmJlZm9yZSwgJjo6YWZ0ZXIge1xuICAgICAgYW5pbWF0aW9uOiBzY2FsZS11cCAkYW5pbWF0aW9uLWR1cmF0aW9uIGVhc2Utb3V0IDBzO1xuICAgIH1cbiAgICAmOjphZnRlciB7XG4gICAgICBhbmltYXRpb24tZGVsYXk6ICRhbmltYXRpb24tZHVyYXRpb24vMjtcbiAgICB9XG4gIH1cblxuICA6Zm9jdXMgLnByb2dyZXNzLW1hcmtlciB7XG4gICAgJjo6YmVmb3JlLCAmOjphZnRlciB7XG4gICAgICBAaW5jbHVkZSByaXBwbGUtZWxlbWVudC1hY3RpdmUoKTtcbiAgICB9XG4gIH1cblxufVxuXG4vLyAtLS0tLSBGaWxsIHVwIHRoZSBwYXRoIGJldHdlZW4gbWFya2VycyB3aGVuIGl0IGJlY29tZXMgYWN0aXZlIC0tLS0tXG4uYW5pbS1wYXRoIHtcblxuICAucHJvZ3Jlc3Mtc3RlcCB7XG5cbiAgICAmOjphZnRlciB7XG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICRwcm9ncmVzcy1jb2xvci1ncmV5LWxpZ2h0IDUwJSwgJHByb2dyZXNzLWNvbG9yLWdyZXkgNTAlKTtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogMjAwJSAxMDAlO1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCUgMTAwJTtcbiAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtcG9zaXRpb24gJGFuaW1hdGlvbi1kdXJhdGlvbiBlYXNlLW91dDtcbiAgICB9XG5cbiAgICAmLmlzLWNvbXBsZXRlOjphZnRlciB7XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTAwJSAxMDAlO1xuICAgIH1cblxuICB9XG5cbn1cbiJdfQ== */
